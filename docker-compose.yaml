##########################################################
version: "3"
services:
  nodered: 
    build: ./nodered
    image: localbuild/nodered:april2021
    container_name: nodered
    restart: unless-stopped
    ports: 
      - "1880:1880"
    volumes:
      - noderedData:/data
    networks:
      - edge
 ##########################################################     
  grafana:
    build: ./grafana
    image: localbuild/grafana:april2021
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes: 
      - grafanaData:/var/lib/grafana
    networks:
      - edge
##########################################################      
  influxdb:
    build: ./influx
    image: localbuild/influxdb:april2021
    container_name: influxdb
    restart: unless-stopped
    environment:
     - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME} # sourced from .env
     - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD} # sourced from .env
            
    ports:
      - "8082:8082"
      - "8086:8086"
      - "8089:8089"
    volumes:
      - $HOME/docker/influxdb/data:/var/lib/influxdb
      - $HOME/docker/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - $HOME/docker/influxdb/init:/docker-entrypoint-initdb.d
    networks: 
      - edge
##########################################################     

  mosquitto:
    build: ./mosquitto
    image: localbuild/mosquitto:april2021
    container_name: mosquitto  
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"  
    volumes:    
#old:    
#      - /home/daniel/EDMA_Docker_0.1/mqtt/config:/mosquitto/config
#      - /home/daniel/EDMA_Docker_0.1/mqtt/data:/mosquitto/data
#      - /home/daniel/EDMA_Docker_0.1/mqtt/log:/mosquitto/log     
    
      - /EDMA_Docker_0.1/mqtt/config:/mosquitto/config
      - /EDMA_Docker_0.1/mqtt/data:/mosquitto/data
      - /EDMA_Docker_0.1/mqtt/log:/mosquitto/log    
      
    networks: 
      - edge           
##########################################################    
#Create internal link network for Containers
networks:
  edge:
##########################################################
#Create Volumes for persistent Storage
volumes:
  grafanaData:
  noderedData:
  config:
  data:
  log:  

